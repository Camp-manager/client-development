// Importa as variáveis globais, tornando-as disponíveis com o prefixo 'vars'.
@use "../../../../shared/styles/variables" as vars;
// Importa o módulo de cores do SASS para manipular cores dinamicamente.
@use "sass:color";

:host {
  display: block;
  width: 100%;
  height: 100%;

  .form-container-responsive {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    padding: 1rem 1.5rem;
    width: 100%;
    height: 100%;
    overflow-y: auto;
  }
}

.form-section {
  background-color: vars.$background; // Usando variável de fundo claro
  padding: 1.5rem;
  border-radius: vars.$small-border-radius; // Usando variável de borda
  border: 1px solid vars.$border-color-light; // Usando variável de cor de borda

  h5 {
    margin-top: 0;
    margin-bottom: 1rem;
    font-size: 1.2rem;
    color: vars.$primary-blue; // Usando variável de cor primária
    border-bottom: 1px solid vars.$border-color-light; // Usando variável
    padding-bottom: 0.5rem;
  }
}

.form-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 1rem 1.5rem;
}

.form-group {
  display: flex;
  flex-direction: column;
  min-width: 180px;

  label {
    margin-bottom: 0.4rem;
    font-weight: 500;
    font-size: 0.9rem;
  }

  // Estilo base para todos os campos do formulário
  input[type="text"],
  input[type="date"],
  input[type="time"],
  select,
  textarea {
    display: block;
    width: 100%;
    padding: 0.75rem 0.9rem;
    font-size: 0.95rem;
    border: 1px solid vars.$border-color-light; // Usando variável
    border-radius: vars.$small-border-radius; // Usando variável
    transition: border-color 0.3s, box-shadow 0.3s;
    box-sizing: border-box;
    background-color: vars.$background-card; // Usando variável

    &:focus {
      border-color: vars.$primary-blue; // Usando variável
      outline: none;
      box-shadow: 0 0 0 2px vars.$focus-shadow-color; // Usando variável
    }

    // Validação com variáveis
    &.ng-invalid.ng-touched {
      border-color: vars.$danger-color;
      &:focus {
        box-shadow: 0 0 0 2px vars.$danger-focus-shadow-color;
      }
    }
  }

  textarea {
    min-height: 80px;
    resize: vertical;
  }
}

.full-width-group {
  grid-column: 1 / -1;
}

.form-array-container {
  margin-top: 1rem;
  padding-left: 1rem;
  border-left: 3px solid vars.$primary-blue; // Usando variável
}

.form-array-item {
  background-color: vars.$background-card; // Usando variável
  padding: 1rem;
  margin-bottom: 1rem;
  border-radius: vars.$small-border-radius;
  box-shadow: vars.$box-shadow; // Usando variável
  position: relative;

  .item-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 0.75rem;
    h6 {
      margin: 0;
      font-size: 1rem;
      color: vars.$primary-text;
    }
  }
}

.remove-item-btn {
  padding: 0.3rem 0.6rem;
  font-size: 0.8rem;
}

.add-item-btn {
  margin-top: 0.5rem;
  display: inline-flex;
  align-items: center;
  gap: 0.5em;
}

.button-container {
  margin-top: 2rem;
  padding-top: 1.5rem;
  border-top: 1px solid vars.$border-color-light; // Usando variável
  display: flex;
  justify-content: flex-end;
  gap: 1rem;
}

.equipe-dias-container {
  margin-top: 1rem;
  padding: 0.5rem;
  // Criando uma cor de fundo clara a partir da cor primária
  background-color: color.change(vars.$primary-blue, $alpha: 0.05);
  border-radius: vars.$small-border-radius;
}

.dia-funcao-item {
  margin-bottom: 0.75rem;
  label {
    font-weight: bold;
    display: block;
    margin-bottom: 0.25rem;
  }
  input[type="text"] {
    font-size: 0.9rem;
    padding: 0.5rem 0.7rem;
  }
}
.ng-select-header {
  padding: 0.5rem 0.75rem;
  border-bottom: 1px solid #e0e0e0;

  .select-all-label {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    font-weight: 500;
    cursor: pointer;

    input[type="checkbox"] {
      width: 16px;
      height: 16px;
    }
  }
}
